{"version":3,"sources":["helpers/ThemeProvider.js","components/SwitchToggle/SwitchToggle.js","components/Header.js","components/Form.js","components/Task.js","helpers/helpers.js","components/Main.js","assets/github-dark.svg","assets/github-light.svg","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","theme","setTheme","toggle","handleThemeToggle","Provider","value","SwitchToggle","useContext","type","className","onChange","name","id","htmlFor","Header","Form","props","error","setError","title","setTitle","description","setDescription","handleFormSubmit","role","onSubmit","placeholder","autoComplete","maxLength","e","target","Task","details","handleTaskDelete","status","setStatus","onClick","style","backgroundColor","color","content","background","taskColorGenerator","number","toString","lastDigitOfNumber","parseInt","length","createTaskItem","key","Main","localStorage","tasks","JSON","parse","taskList","setTaskList","setKey","useEffect","stringify","newTaskList","filter","preventDefault","item","map","task","Footer","href","rel","src","githubLight","githubDark","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e047f6fa.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\n\nconst ThemeContext = createContext();\n\nconst ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState('light');\n\n  const handleThemeToggle = () => {\n    if (theme === 'light') {\n      setTheme('dark');\n    } else {\n      setTheme('light');\n    }\n  };\n\n  const toggle = {\n    theme,\n    handleThemeToggle,\n  };\n\n  return (\n    <ThemeContext.Provider value={toggle}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport { ThemeContext, ThemeProvider };\n","import React, { useContext } from 'react';\nimport './SwitchToggle.scss';\nimport { ThemeContext } from '../../helpers/ThemeProvider';\n\nconst SwitchToggle = () => {\n  const { handleThemeToggle } = useContext(ThemeContext);\n  /* eslint-disable */\n  return (\n    <>\n      <form type=\"submit\" className=\"switch\">\n        <input\n          type=\"checkbox\"\n          className=\"switch-checkbox\"\n          onChange={handleThemeToggle}\n          name=\"themeToggle\"\n          id=\"themeToggle\" />\n        <label className=\"switch-label\" htmlFor=\"themeToggle\">\n          <span className=\"switch-inner\" />\n          <span className=\"switch-switch\" />\n        </label>\n      </form>\n    </>\n  );\n};\n\nexport default SwitchToggle;\n","import React, { useContext } from 'react';\nimport { ThemeContext } from '../helpers/ThemeProvider';\nimport ToggleSwitch from './SwitchToggle/SwitchToggle';\n\nconst Header = () => {\n  const { theme } = useContext(ThemeContext);\n  return (\n    <>\n      <header className={`header ${theme}`}>\n        <nav className=\"header__container\">\n          <h1 className=\"header__title\">Task list</h1>\n          <ToggleSwitch />\n        </nav>\n      </header>\n    </>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Form = props => {\n  const {\n    error,\n    setError,\n    title,\n    setTitle,\n    description,\n    setDescription,\n    handleFormSubmit,\n  } = props;\n\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n    setError(false);\n  };\n\n  const handleDescriptionChange = e => {\n    setDescription(e.target.value);\n  };\n\n  return (\n    <section role=\"contentinfo\">\n      <h2 className=\"form__title\">New Task</h2>\n      {error && <p className=\"form__errorMessage\">Please enter a title for your task.</p>}\n      <form onSubmit={handleFormSubmit} className=\"form\" name=\"Add New Task\">\n        <input\n          className={error ? 'form__input form__error' : 'form__input'}\n          type=\"text\"\n          placeholder=\"Task name\"\n          autoComplete=\"off\"\n          maxLength=\"30\"\n          value={title}\n          onChange={handleTitleChange} />\n        <input\n          className=\"form__input\"\n          type=\"text\"\n          placeholder=\"Task description\"\n          autoComplete=\"off\"\n          maxLength=\"30\"\n          value={description}\n          onChange={handleDescriptionChange} />\n        <button className=\"form__btn\" type=\"submit\">Add task</button>\n      </form>\n    </section>\n  );\n};\n\nexport default Form;\n","import React, { useState } from 'react';\n\nconst Task = ({ details, handleTaskDelete }) => {\n  const [status, setStatus] = useState('pending');\n\n  const handleTaskClick = () => {\n    if (status === 'pending') {\n      setStatus('done');\n    } else {\n      setStatus('pending');\n    }\n  };\n\n  return (\n    <button\n      onClick={handleTaskClick}\n      type=\"button\"\n      className={`listItem ${status}`}\n      style={status === 'pending' ? { backgroundColor: details.color } : { backgroundColor: '#1C190D' }}>\n      <div className=\"listItem__details\">\n        <div>\n          <h3 className=\"listItem__title\">{details.content.title}</h3>\n          <p className=\"listItem__subtitle\">{details.content.description || 'No description'}</p>\n        </div>\n        <p\n          className={`listItem__tag ${status}`}\n          style={status === 'pending' ? { background: 'rgba(0, 0, 0, 0.2)' } : { backgroundColor: details.color }}>\n          {status}\n        </p>\n      </div>\n      {status === 'done' && <button type=\"button\" onClick={() => handleTaskDelete(details.id)} className=\"listItem__btn\">Remove</button>}\n    </button>\n  );\n};\n\nexport default Task;\n","const taskColorGenerator = id => {\n  const number = id.toString();\n  const lastDigitOfNumber = parseInt(number[number.length - 1], 10);\n  const hue = lastDigitOfNumber * 36;\n  return `hsl(${hue}, 60%, 70%)`;\n};\n\nconst createTaskItem = (key, title, description) => {\n  const newTask = {\n    id: key,\n    color: taskColorGenerator(key),\n    content: {\n      title,\n      description,\n    },\n  };\n  return newTask;\n};\n\nexport default createTaskItem;\n","import React, { useState, useEffect } from 'react';\n\nimport Form from './Form';\nimport Task from './Task';\nimport createTaskItem from '../helpers/helpers';\n\nconst Main = () => {\n  const [\n    taskList,\n    setTaskList,\n  ] = useState(localStorage.tasks ? JSON.parse(localStorage.tasks) : []);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState(false);\n  const [key, setKey] = useState(taskList.length);\n\n  useEffect(() => {\n    localStorage.tasks = JSON.stringify(taskList);\n    setKey(taskList.length + 1);\n  }, [taskList]);\n\n  const handleTaskDelete = id => {\n    const newTaskList = taskList.filter(e => e.id !== id);\n    setTaskList(newTaskList);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (title === '') {\n      setError(true);\n    } else {\n      const item = createTaskItem(key, title, description);\n      setTaskList([item, ...taskList]);\n      setTitle('');\n      setDescription('');\n    }\n  };\n\n  return (\n    <>\n      <main className=\"main\">\n        <Form\n          error={error}\n          setError={setError}\n          title={title}\n          setTitle={setTitle}\n          description={description}\n          setDescription={setDescription}\n          handleFormSubmit={handleFormSubmit} />\n        <section role=\"contentinfo\">\n          <h2>Tasks</h2>\n          <ul className=\"taskList\">\n            {taskList && taskList\n              .map(task => (\n                <Task\n                  key={task.id}\n                  details={task}\n                  handleTaskDelete={handleTaskDelete} />\n              ))}\n          </ul>\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/github-dark.2a516804.svg\";","export default __webpack_public_path__ + \"static/media/github-light.02f4c054.svg\";","import React, { useContext } from 'react';\nimport { ThemeContext } from '../helpers/ThemeProvider';\nimport githubDark from '../assets/github-dark.svg';\nimport githubLight from '../assets/github-light.svg';\n\nconst Footer = () => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <>\n      <footer className={`footer ${theme}`}>\n        <a href=\"https://github.com/Lambtsa/todo-app-react\" rel=\"noreferrer\" target=\"_blank\">\n          <img className=\"footer__img\" src={theme === 'dark' ? githubLight : githubDark} alt={`Github logo ${theme}`} />\n        </a>\n      </footer>\n    </>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './styles.scss';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport { ThemeProvider } from './helpers/ThemeProvider';\n\nconst App = () => (\n  <ThemeProvider>\n    <Header />\n    <Main />\n    <Footer />\n  </ThemeProvider>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}