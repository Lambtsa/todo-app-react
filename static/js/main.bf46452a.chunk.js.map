{"version":3,"sources":["helpers/ThemeProvider.js","components/SwitchToggle/SwitchToggle.js","assets/tom-lamb.svg","components/Header.js","components/Form.js","components/Task.js","helpers/helpers.js","components/Main.js","assets/github-dark.svg","assets/github-light.svg","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","localStorage","theme","JSON","parse","setTheme","useEffect","stringify","toggle","handleThemeToggle","Provider","value","SwitchToggle","useContext","type","className","onChange","name","id","checked","htmlFor","Header","src","logo","alt","Form","props","error","setError","title","setTitle","description","setDescription","handleFormSubmit","role","onSubmit","placeholder","autoComplete","maxLength","e","target","Task","details","handleTaskDelete","status","setStatus","onClick","style","backgroundColor","color","content","background","taskColorGenerator","number","toString","lastDigitOfNumber","parseInt","length","Main","arrayOfTasks","tasks","taskList","setTaskList","map","reduce","a","b","Math","max","key","setKey","newTaskList","filter","preventDefault","item","createTaskItem","task","Footer","href","rel","githubLight","githubDark","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf46452a.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nconst ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(localStorage.theme ? JSON.parse(localStorage.theme) : 'light');\n\n  useEffect(() => {\n    localStorage.theme = JSON.stringify(theme);\n  }, [theme]);\n\n  const handleThemeToggle = () => {\n    if (theme === 'light') {\n      setTheme('dark');\n    } else {\n      setTheme('light');\n    }\n  };\n\n  const toggle = {\n    theme,\n    handleThemeToggle,\n  };\n\n  return (\n    <ThemeContext.Provider value={toggle}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport { ThemeContext, ThemeProvider };\n","import React, { useContext } from 'react';\nimport './SwitchToggle.scss';\nimport { ThemeContext } from '../../helpers/ThemeProvider';\n\nconst SwitchToggle = () => {\n  const { theme, handleThemeToggle } = useContext(ThemeContext);\n\n  /* eslint-disable */\n  return (\n    <>\n      <form type=\"submit\" className=\"switch\">\n        <input\n          type=\"checkbox\"\n          className=\"switch-checkbox\"\n          onChange={handleThemeToggle}\n          name=\"themeToggle\"\n          id=\"themeToggle\"\n          checked={theme === 'dark'} />\n        <label className=\"switch-label\" htmlFor=\"themeToggle\">\n          <span className=\"switch-inner\" />\n          <span className=\"switch-switch\" />\n        </label>\n      </form>\n    </>\n  );\n};\n\nexport default SwitchToggle;\n","export default __webpack_public_path__ + \"static/media/tom-lamb.04182375.svg\";","import React, { useContext } from 'react';\nimport { ThemeContext } from '../helpers/ThemeProvider';\nimport ToggleSwitch from './SwitchToggle/SwitchToggle';\nimport logo from '../assets/tom-lamb.svg';\n\nconst Header = () => {\n  const { theme } = useContext(ThemeContext);\n  return (\n    <>\n      <header className={`header ${theme}`}>\n        <nav className=\"header__container\">\n          <img className=\"header__img\" src={logo} alt=\"Tom Lamb logo lettering\" />\n          <h1 className=\"header__title\">Task list</h1>\n          <ToggleSwitch />\n        </nav>\n      </header>\n    </>\n  );\n};\n\nexport default Header;\n","import React, { useContext } from 'react';\nimport { ThemeContext } from '../helpers/ThemeProvider';\n\nconst Form = props => {\n  const { theme } = useContext(ThemeContext);\n  const {\n    error,\n    setError,\n    title,\n    setTitle,\n    description,\n    setDescription,\n    handleFormSubmit,\n  } = props;\n\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n    setError(false);\n  };\n\n  const handleDescriptionChange = e => {\n    setDescription(e.target.value);\n  };\n\n  return (\n    <section className={`form__container ${theme}`} role=\"contentinfo\">\n      <h2 className=\"form__title\">New Task</h2>\n      {error && <p className=\"form__errorMessage\">Please enter a title for your task.</p>}\n      <form onSubmit={handleFormSubmit} className=\"form\" name=\"Add New Task\">\n        <input\n          className={error ? 'form__input form__error' : 'form__input'}\n          type=\"text\"\n          placeholder=\"Task name\"\n          autoComplete=\"off\"\n          maxLength=\"30\"\n          value={title}\n          onChange={handleTitleChange} />\n        <input\n          className=\"form__input\"\n          type=\"text\"\n          placeholder=\"Task description\"\n          autoComplete=\"off\"\n          maxLength=\"30\"\n          value={description}\n          onChange={handleDescriptionChange} />\n        <button className=\"form__btn\" type=\"submit\">Add task</button>\n      </form>\n    </section>\n  );\n};\n\nexport default Form;\n","import React, { useState } from 'react';\n\nconst Task = ({ details, handleTaskDelete }) => {\n  const [status, setStatus] = useState('pending');\n\n  const handleTaskClick = () => {\n    if (status === 'pending') {\n      setStatus('done');\n    } else {\n      setStatus('pending');\n    }\n  };\n\n  return (\n    <button\n      onClick={handleTaskClick}\n      type=\"button\"\n      className={`listItem ${status}`}\n      style={status === 'pending' ? { backgroundColor: details.color } : { backgroundColor: '#1C190D' }}>\n      <div className=\"listItem__details\">\n        <div>\n          <h3 className=\"listItem__title\">{details.content.title}</h3>\n          <p className=\"listItem__subtitle\">{details.content.description || 'No description'}</p>\n        </div>\n        <p\n          className={`listItem__tag ${status}`}\n          style={status === 'pending' ? { background: 'rgba(0, 0, 0, 0.2)' } : { backgroundColor: details.color }}>\n          {status}\n        </p>\n      </div>\n      {status === 'done' && <button type=\"button\" onClick={() => handleTaskDelete(details.id)} className=\"listItem__btn\">Remove</button>}\n    </button>\n  );\n};\n\nexport default Task;\n","const taskColorGenerator = id => {\n  const number = id.toString();\n  const lastDigitOfNumber = parseInt(number[number.length - 1], 10);\n  const hue = lastDigitOfNumber * 36;\n  return `hsl(${hue}, 60%, 70%)`;\n};\n\nconst createTaskItem = (key, title, description) => {\n  const newTask = {\n    id: key,\n    color: taskColorGenerator(key),\n    content: {\n      title,\n      description,\n    },\n  };\n  return newTask;\n};\n\nconst findHighestId = arrayOfTasks => {\n  if (arrayOfTasks.length === 0) {\n    return 0;\n  }\n  return arrayOfTasks\n    .map(e => parseInt(e.id, 10))\n    .reduce((a, b) => Math.max(a, b));\n};\n\nexport { createTaskItem, taskColorGenerator, findHighestId };\n","import React, { useState, useEffect, useContext } from 'react';\nimport { ThemeContext } from '../helpers/ThemeProvider';\nimport Form from './Form';\nimport Task from './Task';\nimport { createTaskItem, findHighestId } from '../helpers/helpers';\n\nconst Main = () => {\n  const { theme } = useContext(ThemeContext);\n  const [\n    taskList,\n    setTaskList,\n  ] = useState(localStorage.tasks ? JSON.parse(localStorage.tasks) : []);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState(false);\n  const [key, setKey] = useState(findHighestId(taskList));\n\n  useEffect(() => {\n    localStorage.tasks = JSON.stringify(taskList);\n    setKey(key + 1);\n  }, [taskList]);\n\n  const handleTaskDelete = id => {\n    const newTaskList = taskList.filter(e => e.id !== id);\n    setTaskList(newTaskList);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (title === '') {\n      setError(true);\n    } else {\n      const item = createTaskItem(key, title, description);\n      setTaskList([item, ...taskList]);\n      setTitle('');\n      setDescription('');\n    }\n  };\n\n  return (\n    <>\n      <main className={`main ${theme}`}>\n        <div className=\"main__container\">\n          <Form\n            error={error}\n            setError={setError}\n            title={title}\n            setTitle={setTitle}\n            description={description}\n            setDescription={setDescription}\n            handleFormSubmit={handleFormSubmit} />\n          <section role=\"contentinfo\">\n            <h2>Tasks</h2>\n            <ul className=\"taskList\">\n              {taskList && taskList\n                .map(task => (\n                  <Task\n                    key={task.id}\n                    details={task}\n                    handleTaskDelete={handleTaskDelete} />\n                ))}\n            </ul>\n          </section>\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/github-dark.2a516804.svg\";","export default __webpack_public_path__ + \"static/media/github-light.02f4c054.svg\";","import React, { useContext } from 'react';\nimport { ThemeContext } from '../helpers/ThemeProvider';\nimport githubDark from '../assets/github-dark.svg';\nimport githubLight from '../assets/github-light.svg';\n\nconst Footer = () => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <>\n      <footer className={`footer ${theme}`}>\n        <a href=\"https://github.com/Lambtsa/todo-app-react\" rel=\"noreferrer\" target=\"_blank\">\n          <img className=\"footer__img\" src={theme === 'dark' ? githubLight : githubDark} alt={`Github logo ${theme}`} />\n        </a>\n      </footer>\n    </>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './styles.scss';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport { ThemeProvider } from './helpers/ThemeProvider';\n\nconst App = () => (\n  <ThemeProvider>\n    <Header />\n    <Main />\n    <Footer />\n  </ThemeProvider>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}